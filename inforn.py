#1 и 2 ПАРА
#КОД И ПОЯСНЕНИЕ
#print - это команда в питоне, которая позволяет вам напечатать что-либо в консоли исполняемого файла
#input - это команда в питоне, которая позволяет пользователю вводить какие-либо значения
#list - преобразование в список
#красная точка это по сути остановка кода, там, где мы хотим. Нужно нажать на строку кода
#Операторы - участники выражения, которые проводят операцию; Операнды - участники выражения, над которыми проводиться операция
#необходимо использовать нормальные адекватные названия, которые содержат то, чем названа переменная; нельзя начинать название переменной с цифры!!!
#ТИПЫ ДАННЫХ: строка(str), плавающая запятая(float), цифры(int), booleran(bool, true/false)
#print, list, dict, set, pass, break, raise НЕ ИСПОЛЬЗОВАТЬ В КАЧЕСТВЕ НАЗВАНИЯ ЭЛЕМЕНТА
#Конкатенация строк в Python — это операция соединения двух или более строк в одну
#Цифры можно складывать, делить, умножать, вычитать; Строки можно только складывать! Строки и цифры складывать нельзя

#3 ПАРА СПИСКИ
# lst = [1, 2, 3.14, 'Hi', True]
# print(lst[0]) #выведется 1
#Список, картэжэ, словарь, множества
#[start: stop: step] соответственно [0, 6, 2]; ::-1 - срез начать с конца; ::0 - с самого начала; ::2 - через каждые два
#МЕТОДЫ СПИСКОВ
# lst.append(7)
# lst.insert(0, 'hhh')
# print(lst)
#APPEND - добавление переменной в список, в самый конец
#INSERT - добавление переменной в список ПЕРЕД заданной переменной
#EXTEND - если нужно объединить два списка, не создает новый, а переделывает старый список
#POP - удаляет элемент, который соответствует указанному номеру, но он же возвращает. Удаляет по индексу, если не указать индекс, то удалит последний
#REMOVE - удаляет элемент, но не возращает. В методе remove надо указывать сам элемент, который надо удалить, а не его номер в списке. Если указать номер элемента, возникнет ошибка
#INDEX - используется для того, чтобы проверить, под каким номером в списке хранится элемент
#SORT - сортирует список на месте

#4 ПАРА ФУНКЦИЯ
# def - определение, нужно писать перед началом кастомной функции, пробел, название функции(say_hi), в скобках аргумент
#все что под названием функции - это тело функции
# def say_hi(name):
#     print(f'Hello {name}')
# #чтобы вызвать функцию, нужно написать ее название
# say_hi('Maria')

#5 и 6 ПАРА (подключили гитхаб) ЦИКЛ
# def double(number):
#     return 2 * number
# result1 = double(4)  # result1 = 8
# result2 = double(5)  # result2 = 10
# print(f"result1 = {result1}")  # result1 = 8
# print(f"result2 = {result2}")  # result2 = 10
#функция без возвращающей конструкции - это процедура
#возвращающая конструкция это return
# double = lambda x: x*2 #можно только один раз использовать анонимную функцию
# numbers = [1, 2, 3, 4, 5]
# squared_numbers = list(map(lambda x: x ** 2, numbers)) #map - преобразование
# print(squared_numbers)   # Вывод: [1, 4, 9, 16, 25]

# while условное_выражение:
#    инструкции
# Цикл while проверяет истинность некоторого условия, и если условие истинно, то выполняет инструкции цикла
# number = 1
# while number < 5:
#     print(f"number = {number}")
#     number += 1 #number = 1 + number
# print("Работа программы завершена")

# def decimal_to_binary(number):
#     return bin(number)[2:]
# def decimal_to_octal(number):
#     return oct(number)[2:]
# def decimal_to_hexadecimal(number):
#     return hex(number)[2:].upper()
# def main():
#     print("Добро пожаловать в калькулятор перевода из десятичной системы!")
#     number = int(input("Введите десятичное число: "))
#     print("\nВыберите целевую систему исчисления:")
#     print("1 - Двоичная")
#     print("2 - Восьмеричная")
#     print("3 - Шестнадцатеричная")
#     choice = input("Ваш выбор: ")
#     if choice == "1":
#         print(f"Двоичное представление: {decimal_to_binary(number)}")
#     elif choice == "2":
#         print(f"Восьмеричное представление: {decimal_to_octal(number)}")
#     elif choice == "3":
#         print(f"Шестнадцатеричное представление: {decimal_to_hexadecimal(number)}")
#     else:
#         print("Некорректный выбор. Попробуйте снова.")
# if __name__ == "__main__":
#     main()

# def mass_fraction(mass_sol, mass_sub):
#     return mass_sub/mass_sol
# def vol_fraction(vol_mix, vol_sub):
#     return vol_sub/vol_mix
# def amount_of_substance(molar_concentration, vol_sub):
#     return molar_concentration * vol_sub

#7 ПАРА БИБЛИОТЕКА
# def fact(n):
#     factorial = 1
#     for l in range(2,n+1):
#         factorial *= l #factorial = factorial * l
#     return factorial
# n = int(input("Enter the number "))
# print(fact(n))
# num = int(input("Enter the number "))
# import math #вызывание библиотеки
# print(math.factorial(num))
#чтобы пользоваться библиотекой, нужно перейти в другой проект