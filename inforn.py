#КОД И ПОЯСНЕНИЕ
#print - это команда в питоне, которая позволяет вам напечатать что-либо в консоли исполняемого файла
#input - это команда в питоне, которая позволяет пользователю вводить какие-либо значения
#list - преобразование в список

#КАКИЕ-ТО ПРОСТО ЗАПИСИ ДЛЯ ТУПЫХ
#красная точка это по сути остановка кода, там, где мы хотим. Нужно нажать на строку кода
#Операторы - участники выражения, которые проводят операцию
#Операнды - участники выражения, над которыми проводиться операция
#необходимо использовать нормальные адекватные названия, которые содржат то, чем названа переменная
#нельзя начинать название переменной с цифры!!!
#ТИПЫ ДАННЫХ: строка(str), плавающая запятая(float), цифры(int), booleran(bool, true/false)
#print, list, dict, set, pass, break, raise НЕ ИСПОЛЬЗОВАТЬ В КАЧЕСТВЕ НАЗВАНИЯ ЭЛЕМЕНТА
#Конкатенация строк в Python — это операция соединения двух или более строк в одну
#Цифры можно складывать, делить, умножать, вычитать
#Строки можно только складывать! Строки и цифры складывать нельзя

#КОДЫ
# print('Hello world!')
# name = input("Enter name ")
# print("Hi", name)

# first_name = input('Введите свое имя: )
# last_name = input('Введите свою фамилию: )
# age = input('Введите свой возраст: )
# print(f'Имя: {first_name}, Фамилия: {last_name}, Возраст: {age}')

#2 ПАРА
# first_number = int(input('Ведите первое число: '))
# second_number = int(input('Введите второе число: '))
# print (first_number + second_number)
# print (first_number - second_number)
# print (first_number // second_number)
# print (first_number / second_number)
# print (first_number ** second_number)
# print (first_number % second_number)
# print (first_number * second_number)

#3 ПАРА
# lst = [1, 2, 3.14, 'Hi', True]
# print(lst[0])
#Список, картэжэ, словарь, множества
#[start: stop: step] соответственно [0, 6, 2]
#::-1 - срез начать с конца
#::0 - с самого начала
#::2 - через каждые два
#МЕТОДЫ СПИСКОВ
# lst.append(7)
# lst.insert(0, 'hhh')
# print(lst)
#APPEND - добавление переменной в список, в самый конец
#INSERT - добавление переменной в список ПЕРЕД заданной переменной
#EXTEND - если нужно объединить два списка, не создает новый, а переделывает старый список
#POP - удаляет элемент, который соответствует указанному номеру, но он же возвращает. Удаляет по индексу, если не указать индекс, то удалит последний
#REMOVE - удаляет элемент, но не возращает. В методе remove надо указывать сам элемент, который надо удалить, а не его номер в списке. Если указать номер элемента, возникнет ошибка
#INDEX - используется для того, чтобы проверить, под каким номером в списке хранится элемент
#SORT - сортирует список на месте

# lst1 = ['вика', 'дура', 'моя', 'вика', 'лженаука']
# tpl2 = tuple(lst1)
# print(tpl2.count('вика'))
# print(tpl2)

#4 ПАРА
# def - определение, нужно писать перед началом кастомной функции, пробел, название функции(say_hi), в скобках аргумент
#все что под названием функции - это тело функции
# def say_hi(name):
#     print(f'Hello {name}')
# #чтобы вызвать функцию, нужно написать ее название
# say_hi('Maria')

#5 и 6 ПАРА (подключили гитхаб)
def double(number):
    return 2 * number
result1 = double(4)  # result1 = 8
result2 = double(5)  # result2 = 10
print(f"result1 = {result1}")  # result1 = 8
print(f"result2 = {result2}")  # result2 = 10
